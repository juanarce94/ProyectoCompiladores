//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Juan Miguel\Documents\Visual Studio 2013\Projects\PrototipoCompi\PrototipoCompi\MyParser.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PrototipoCompi {

using System;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMyParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>exprsAST</c>
	/// labeled alternative in <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprsAST([NotNull] MyParser.ExprsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprsAST</c>
	/// labeled alternative in <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprsAST([NotNull] MyParser.ExprsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>epsStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEpsStatAST([NotNull] MyParser.EpsStatASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>epsStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEpsStatAST([NotNull] MyParser.EpsStatASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>asignStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignStatAST([NotNull] MyParser.AsignStatASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignStatAST([NotNull] MyParser.AsignStatASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>exprStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStatAST([NotNull] MyParser.ExprStatASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprStatAST</c>
	/// labeled alternative in <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStatAST([NotNull] MyParser.ExprStatASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>idlistsAST</c>
	/// labeled alternative in <see cref="MyParser.idlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdlistsAST([NotNull] MyParser.IdlistsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idlistsAST</c>
	/// labeled alternative in <see cref="MyParser.idlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdlistsAST([NotNull] MyParser.IdlistsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>statsAST</c>
	/// labeled alternative in <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatsAST([NotNull] MyParser.StatsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>statsAST</c>
	/// labeled alternative in <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatsAST([NotNull] MyParser.StatsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>termsAST</c>
	/// labeled alternative in <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermsAST([NotNull] MyParser.TermsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>termsAST</c>
	/// labeled alternative in <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermsAST([NotNull] MyParser.TermsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>sinDeclAST</c>
	/// labeled alternative in <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSinDeclAST([NotNull] MyParser.SinDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sinDeclAST</c>
	/// labeled alternative in <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSinDeclAST([NotNull] MyParser.SinDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>conDeclAST</c>
	/// labeled alternative in <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConDeclAST([NotNull] MyParser.ConDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conDeclAST</c>
	/// labeled alternative in <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConDeclAST([NotNull] MyParser.ConDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>exprFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprFactAST([NotNull] MyParser.ExprFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprFactAST([NotNull] MyParser.ExprFactASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>idFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdFactAST([NotNull] MyParser.IdFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdFactAST([NotNull] MyParser.IdFactASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>numFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumFactAST([NotNull] MyParser.NumFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumFactAST([NotNull] MyParser.NumFactASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>strFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrFactAST([NotNull] MyParser.StrFactASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>strFactAST</c>
	/// labeled alternative in <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrFactAST([NotNull] MyParser.StrFactASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>strDeclAST</c>
	/// labeled alternative in <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrDeclAST([NotNull] MyParser.StrDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>strDeclAST</c>
	/// labeled alternative in <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrDeclAST([NotNull] MyParser.StrDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>intDeclAST</c>
	/// labeled alternative in <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntDeclAST([NotNull] MyParser.IntDeclASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intDeclAST</c>
	/// labeled alternative in <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntDeclAST([NotNull] MyParser.IntDeclASTContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>declsAST</c>
	/// labeled alternative in <see cref="MyParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclsAST([NotNull] MyParser.DeclsASTContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declsAST</c>
	/// labeled alternative in <see cref="MyParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclsAST([NotNull] MyParser.DeclsASTContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MyParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MyParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarations([NotNull] MyParser.DeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarations([NotNull] MyParser.DeclarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] MyParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] MyParser.DeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] MyParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] MyParser.StatementsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MyParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MyParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] MyParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] MyParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] MyParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] MyParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] MyParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] MyParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.idlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdlist([NotNull] MyParser.IdlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.idlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdlist([NotNull] MyParser.IdlistContext context);
}
} // namespace PrototipoCompi
