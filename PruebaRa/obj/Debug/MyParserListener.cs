//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\users\juan miguel\documents\visual studio 2013\Projects\PruebaRa\PruebaRa\MyParser.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PruebaRa {

using System;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMyParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MyParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MyParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.consDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConsDecl([NotNull] MyParser.ConsDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.consDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConsDecl([NotNull] MyParser.ConsDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] MyParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] MyParser.VarDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] MyParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] MyParser.ClassDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] MyParser.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] MyParser.MethodDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormPars([NotNull] MyParser.FormParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormPars([NotNull] MyParser.FormParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] MyParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] MyParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MyParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MyParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] MyParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] MyParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActPars([NotNull] MyParser.ActParsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActPars([NotNull] MyParser.ActParsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] MyParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] MyParser.ConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.condterm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondterm([NotNull] MyParser.CondtermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.condterm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondterm([NotNull] MyParser.CondtermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondFact([NotNull] MyParser.CondFactContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondFact([NotNull] MyParser.CondFactContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] MyParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] MyParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] MyParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] MyParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] MyParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] MyParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] MyParser.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] MyParser.DesignatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] MyParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] MyParser.RelopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddop([NotNull] MyParser.AddopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddop([NotNull] MyParser.AddopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulop([NotNull] MyParser.MulopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulop([NotNull] MyParser.MulopContext context);
}
} // namespace PruebaRa
