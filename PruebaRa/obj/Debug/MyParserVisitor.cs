//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\users\juan miguel\documents\visual studio 2013\Projects\PruebaRa\PruebaRa\MyParser.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace PruebaRa {

using System;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MyParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IMyParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MyParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.consDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConsDecl([NotNull] MyParser.ConsDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDecl([NotNull] MyParser.VarDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDecl([NotNull] MyParser.ClassDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDecl([NotNull] MyParser.MethodDeclContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.formPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormPars([NotNull] MyParser.FormParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MyParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MyParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MyParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.actPars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActPars([NotNull] MyParser.ActParsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] MyParser.ConditionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.condterm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondterm([NotNull] MyParser.CondtermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.condFact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondFact([NotNull] MyParser.CondFactContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] MyParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] MyParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] MyParser.FactorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDesignator([NotNull] MyParser.DesignatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelop([NotNull] MyParser.RelopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddop([NotNull] MyParser.AddopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MyParser.mulop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulop([NotNull] MyParser.MulopContext context);
}
} // namespace PruebaRa
